webpackHotUpdate("app",{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./src/components/game-container/game/GameBoard.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/game-container/game/GameBoard.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.regexp.split */ \"./node_modules/core-js/modules/es6.regexp.split.js\");\n/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es7_array_includes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es7.array.includes */ \"./node_modules/core-js/modules/es7.array.includes.js\");\n/* harmony import */ var core_js_modules_es7_array_includes__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_array_includes__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es6_string_includes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es6.string.includes */ \"./node_modules/core-js/modules/es6.string.includes.js\");\n/* harmony import */ var core_js_modules_es6_string_includes__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_includes__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/web.dom.iterable */ \"./node_modules/core-js/modules/web.dom.iterable.js\");\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es6.function.name */ \"./node_modules/core-js/modules/es6.function.name.js\");\n/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _GameFinished_vue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./GameFinished.vue */ \"./src/components/game-container/game/GameFinished.vue\");\n/* harmony import */ var _Tile_vue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tile.vue */ \"./src/components/game-container/game/Tile.vue\");\n/* harmony import */ var _RedPiece_vue__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./RedPiece.vue */ \"./src/components/game-container/game/RedPiece.vue\");\n/* harmony import */ var _BluePiece_vue__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./BluePiece.vue */ \"./src/components/game-container/game/BluePiece.vue\");\n/* harmony import */ var _data_NewGameModel_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../data/NewGameModel.js */ \"./src/data/NewGameModel.js\");\n/* harmony import */ var _data_GameBoardModel__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../data/GameBoardModel */ \"./src/data/GameBoardModel.js\");\n\n\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\nvar baseUrl = \"/\";\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: {\n    gameStatus: {\n      type: String\n    },\n    draw: {\n      type: Boolean\n    },\n    winnerName: {\n      type: String\n    },\n    player1: {\n      type: Object\n    },\n    player2: {\n      type: Object\n    },\n    gameBoardTiles: {\n      type: Object\n    },\n    turn: {\n      type: String\n    },\n    user: {\n      type: Object\n    },\n    showTileNumbers: {\n      type: Boolean\n    }\n  },\n  data: function data() {\n    return {\n      newGame: _data_NewGameModel_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n      selectedPieceXY: [],\n      selectedPiece: {},\n      selectedTile: {},\n      validJumps: [],\n      validMoveXY: [],\n      validJumpXY: [],\n      validMoves: [],\n      allowedJumps: [],\n      allowedMoves: [],\n      computerMoves: [],\n      computerJumps: [],\n      redOccupied: [],\n      blueOccupied: [],\n      canBeJumped: [],\n      pieceName: \"\",\n      gameId: \"\",\n      justCrowned: false,\n      message: \"Good luck!\",\n      hasJumped: false,\n      availableJumps: false\n    };\n  },\n  components: {\n    'board-tile': _Tile_vue__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    'red-piece': _RedPiece_vue__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    'blue-piece': _BluePiece_vue__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n    'game-finished': _GameFinished_vue__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n  },\n  watch: {\n    turn: function turn(newValue, oldValue) {\n      this.computerMoves.length = 0;\n      this.computerJumps.length = 0;\n      var moveComputer = this.moveComputer;\n\n      if (this.player1.color === 'blue' && newValue === 'blue') {\n        this.selectAllPieces(this.player1.pieces, newValue, oldValue);\n      } else if (this.player2.color === 'blue' && newValue === 'blue') {\n        this.selectAllPieces(this.player2.pieces, newValue, oldValue);\n      } else if (this.player1.color === 'red' && newValue === 'red') {\n        this.selectAllPieces(this.player1.pieces, newValue, oldValue);\n      } else if (this.player2.color === 'red' && newValue === 'red') {\n        this.selectAllPieces(this.player2.pieces, newValue, oldValue);\n      }\n\n      if (this.player2.name === \"Computer\") {\n        setTimeout(function () {\n          moveComputer();\n        }, 1500);\n      }\n    }\n  },\n  methods: {\n    // one of the two main methods in GameBoard.vue\n    // handles selecting piece logic, moves and jumps available\n    // if a piece can jump, it must\n    //run after turn changes to find any available jumps\n    //if any jumps available, player must jump\n    selectAllPieces: function selectAllPieces(pieces, color, opponentColor) {\n      this.setAvailableJumps(false);\n      var selectPiece = this.selectPiece;\n\n      for (var piece in pieces) {\n        if (pieces[piece].pos) {\n          var x = pieces[piece]['x'];\n          var y = pieces[piece]['y'];\n          selectPiece([x, y], color, opponentColor);\n        }\n      }\n\n      this.validMoveXY.length = 0;\n      this.validJumpXY.length = 0;\n      this.selectedPieceXY.length = 0;\n      this.allowedJumps.length = 0;\n      this.allowedMoves.length = 0;\n      this.canBeJumped.length = 0;\n    },\n    moveComputer: function moveComputer() {\n      var randomMove = Math.floor(Math.random() * this.computerMoves.length);\n      var moveX = this.computerMoves[randomMove][0]['x'];\n      var moveY = this.computerMoves[randomMove][0]['y'];\n      var color = this.player2.color;\n      var opponentColor = \"\";\n      var newMovePosition = this.computerMoves[randomMove][1];\n      var computerJumps = this.computerJumps;\n      var jumpAgain = this.jumpAgain;\n\n      if (color === 'red') {\n        opponentColor = 'blue';\n      } else if (color === 'blue') {\n        opponentColor = 'red';\n      }\n\n      if (this.player2.name === \"Computer\" && this.turn === color) {\n        if (this.computerJumps.length > 0) {\n          var jumpX = this.computerJumps[0][0]['x'];\n          var jumpY = this.computerJumps[0][0]['y'];\n          var newJumpPosition = computerJumps[0][1];\n          this.selectPiece([jumpX, jumpY], color, opponentColor);\n          this.dropPiece([newJumpPosition['x'], newJumpPosition['y']]);\n        } else {\n          this.selectPiece([moveX, moveY], color, opponentColor);\n          console.log(newMovePosition);\n          this.dropPiece([newMovePosition['x'], newMovePosition['y']]);\n        }\n      }\n    },\n    selectPiece: function selectPiece(pos, color, opponentColor) {\n      var setSelectedTile = this.setSelectedTile;\n      var gameBoardTiles = this.gameBoardTiles;\n      var getSelectedTile = this.getSelectedTile;\n      this.allowedJumps.length = 0;\n      var allowedJumps = this.allowedJumps;\n      var setAllowedJumps = this.setAllowedJumps;\n      var allowedMoves = this.allowedMoves;\n      var validJumps = this.validJumps;\n      var validMoves = this.validMoves;\n      this.redOccupied = [];\n      var redOccupied = this.redOccupied;\n      this.blueOccupied = [];\n      var blueOccupied = this.blueOccupied;\n      this.selectedPiece;\n      var setSelectedPiece = this.setSelectedPiece;\n      var selectedPieceXY = this.selectedPieceXY;\n      var getValidMoveXY = this.getValidMoveXY;\n      var setValidMoveXY = this.setValidMoveXY;\n      var setSelectedPieceXY = this.setSelectedPieceXY;\n      var getSelectedPiece = this.getSelectedPiece;\n      var validMoveXY = this.validMoveXY;\n      var validJumpXY = this.validJumpXY;\n      var pieces = {};\n      var opponentPieces = {};\n      var canBeJumped = [];\n      var changeTurn = this.changeTurn;\n      var setCanBeJumped = this.setCanBeJumped;\n      var selectedPiece = this.selectedPiece;\n      var getGameBoardTiles = this.getGameBoardTiles;\n      var pieceName = this.pieceName;\n      var setPieceName = this.setPieceName;\n      var setAvailableJumps = this.setAvailableJumps;\n      var getHasJumped = this.getHasJumped;\n      var setComputerMoves = this.setComputerMoves;\n      var setComputerJumps = this.setComputerJumps;\n      var player2 = this.player2;\n      validMoveXY.length = 0;\n      validJumpXY.length = 0;\n      selectedPieceXY.length = 0;\n      allowedJumps.length = 0;\n      allowedMoves.length = 0;\n      canBeJumped.length = 0;\n\n      if (color === 'red' && this.player1.color === 'red' || color === 'blue' && this.player1.color === 'blue') {\n        pieces = this.player1.pieces;\n        opponentPieces = this.player2.pieces;\n      } else if (color === 'red' && this.player2.color === 'red' || color === 'blue' && this.player2.color === 'blue') {\n        pieces = this.player2.pieces;\n        opponentPieces = this.player1.pieces;\n      }\n\n      canBeJumped = this.canBeJumped;\n      blueOccupied.length = 0;\n      selectedPieceXY = [pos[0], pos[1]];\n\n      for (var tile in gameBoardTiles) {\n        if (gameBoardTiles[tile]['occupied'] === 'red') {\n          redOccupied.push(gameBoardTiles[tile]['pos']);\n        } else if (gameBoardTiles[tile]['occupied'] === 'blue') {\n          blueOccupied.push(gameBoardTiles[tile]['pos']);\n        }\n\n        if (gameBoardTiles[tile]['x'] === selectedPieceXY[0] && gameBoardTiles[tile]['y'] === selectedPieceXY[1]) {\n          setSelectedTile(gameBoardTiles[tile]);\n        }\n      }\n\n      for (var piece in pieces) {\n        if (pieces[piece]['x'] === pos[0] && pieces[piece]['y'] === pos[1]) {\n          setPieceName(piece);\n          setSelectedPiece(pieces[piece]);\n          setSelectedPieceXY([pos[0], pos[1]]);\n          selectedPiece = getSelectedPiece();\n        }\n      }\n\n      var selectedTile = getSelectedTile();\n      validMoves = selectedTile.validMoves;\n      validJumps = selectedTile.validJumps;\n      validJumps.forEach(function (t, i) {\n        if ((t > selectedTile.pos || selectedPiece.crown === true) && !redOccupied.includes(t) && !blueOccupied.includes(t) && t !== false && gameBoardTiles[\"tile\".concat(validMoves[i])]['occupied'] === 'blue' && color === 'red') {\n          allowedJumps.push(\"tile\".concat(t));\n          canBeJumped.push(validMoves[i]);\n\n          if (player2.name === \"Computer\") {\n            setComputerJumps([selectedPiece, gameBoardTiles[\"tile\".concat(t)]]);\n          }\n        }\n\n        if ((t < selectedTile.pos || selectedPiece.crown === true) && !redOccupied.includes(t) && !blueOccupied.includes(t) && t !== false && gameBoardTiles[\"tile\".concat(validMoves[i])]['occupied'] === 'red' && color === 'blue') {\n          allowedJumps.push(\"tile\".concat(t));\n          canBeJumped.push(validMoves[i]);\n\n          if (player2.name === \"Computer\") {\n            setComputerJumps([selectedPiece, gameBoardTiles[\"tile\".concat(t)]]);\n          }\n        }\n\n        if (allowedJumps.length >= 1) {\n          setAvailableJumps(true);\n        }\n\n        setCanBeJumped(canBeJumped);\n      });\n      setAllowedJumps(allowedJumps); //IF PLAYER HASN'T JUMPED, CHECK FOR MOVES\n\n      validMoves.forEach(function (t) {\n        if ((t > selectedTile.pos || selectedPiece.crown === true) && !redOccupied.includes(t) && !blueOccupied.includes(t) && t !== false && color === 'red') {\n          allowedMoves.push(\"tile\".concat(t));\n\n          if (player2.name === \"Computer\") {\n            setComputerMoves([selectedPiece, gameBoardTiles[\"tile\".concat(t)]]);\n          }\n        } else if ((t < selectedTile.pos || selectedPiece.crown === true) && !redOccupied.includes(t) && !blueOccupied.includes(t) && t !== false && color === 'blue') {\n          allowedMoves.push(\"tile\".concat(t));\n\n          if (player2.name === \"Computer\") {\n            setComputerMoves([selectedPiece, gameBoardTiles[\"tile\".concat(t)]]);\n          }\n        }\n      });\n\n      for (var tileName in gameBoardTiles) {\n        if (allowedJumps.includes(tileName)) {\n          validJumpXY.push([gameBoardTiles[tileName]['x'], gameBoardTiles[tileName]['y']]);\n        }\n\n        if (allowedMoves.includes(tileName)) {\n          validMoveXY.push([gameBoardTiles[tileName]['x'], gameBoardTiles[tileName]['y']]);\n        }\n      }\n    },\n    //the other major function. After valid Moves and jumps are computed in selectPiece(),\n    //  dropPiece allows player to choose a move\n    //TODO: player must jump if any jump is available\n    //TODO: 'multijumps' - if jump completed, new tile is selected, if valid jumps found,\n    //\tplayer can continue move\n    dropPiece: function dropPiece(newPosition) {\n      var pieces = {};\n      var opponentPieces = {};\n      var selectedPiece = this.selectedPiece;\n      var getSelectedPiece = this.getSelectedPiece;\n      var setSelectedPieceXY = this.setSelectedPieceXY;\n      var getSelectedTile = this.getSelectedTile;\n      var oldTile = this.getSelectedTile();\n      var newTile = {};\n      var canBeJumped = this.canBeJumped;\n      var validJumps = oldTile.validJumps;\n      var validMoves = oldTile.validMoves;\n      var color = this.turn;\n      var opponentColor = \"\";\n      var validMoveXY = this.validMoveXY;\n      var validJumpXY = this.validJumpXY;\n      var selectedPieceXY = this.selectedPieceXY;\n      var changeTurn = this.changeTurn;\n      var jumpAgain = this.jumpAgain;\n      var allowedJumps = this.allowedJumps;\n      var allowedMoves = this.allowedMoves;\n      var selectPiece = this.selectPiece;\n      var setSelectedPiece = this.setSelectedPiece;\n      var crownPiece = this.crownPiece;\n      var justCrowned = this.justCrowned;\n      var getJustCrowned = this.getJustCrowned;\n      var setJustCrowned = this.setJustCrowned;\n      var postMove = this.postMove;\n      var gameId = this.newGame.id;\n      var pieceName = this.pieceName;\n      var getPieceName = this.getPieceName;\n      var updateGameBoardTile = this.updateGameBoardTile;\n      var gameBoardTiles = this.gameBoardTiles;\n      var setHasJumped = this.setHasJumped;\n      var getAvailableJumps = this.getAvailableJumps;\n      setJustCrowned(false);\n\n      if (color === 'red' && this.player1.color === 'red') {\n        opponentColor = 'blue';\n        opponentPieces = this.player2.pieces;\n      } else if (color === 'red' && this.player2.color === 'red') {\n        opponentColor = 'blue';\n        opponentPieces = this.player1.pieces;\n      } else if (color === 'blue' && this.player1.color === 'blue') {\n        opponentColor = 'red';\n        opponentPieces = this.player2.pieces;\n      } else if (color === 'blue' && this.player2.color === 'blue') {\n        opponentColor = 'red';\n        opponentPieces = this.player1.pieces;\n      }\n\n      selectedPiece = getSelectedPiece(); //selected piece has avaiable jumps\n      //if any jumps are available, player must jump\n\n      if (allowedJumps.length > 0) {\n        allowedJumps.forEach(function (tile) {\n          if (gameBoardTiles[tile]['x'] === newPosition[0] && gameBoardTiles[tile]['y'] === newPosition[1]) {\n            (function () {\n              newTile = gameBoardTiles[tile];\n              newTile.occupied = color;\n              updateGameBoardTile(tile, color);\n              pieceName = getPieceName();\n              var oldAndNewPositions = [pieceName, oldTile.pos, newTile.pos, newTile.x, newTile.y];\n              selectedPiece.pos = newTile.pos;\n              selectedPiece.x = newTile.x;\n              selectedPiece.y = newTile.y;\n              var checkForMoreJumps = [];\n              checkForMoreJumps[0] = [newTile.x, newTile.y];\n              checkForMoreJumps[1] = color;\n              checkForMoreJumps[2] = opponentColor;\n              setSelectedPiece(selectedPiece);\n              allowedJumps.length = 0;\n              oldTile.occupied = 'empty';\n              updateGameBoardTile(\"tile\".concat(oldTile.pos), 'empty');\n\n              var _loop = function _loop(piece) {\n                if (canBeJumped.includes(opponentPieces[piece]['pos'])) {\n                  validJumps.forEach(function (jump, index) {\n                    if (jump === newTile.pos) {\n                      var moveIndex = validMoves[index];\n\n                      if (opponentPieces[piece]['pos'] === validMoves[index]) {\n                        var position = opponentPieces[piece]['pos'];\n                        oldAndNewPositions.push(piece);\n                        updateGameBoardTile(\"tile\".concat(position), 'empty');\n                        opponentPieces[piece] = \"CAPTURED\";\n                      }\n                    }\n                  });\n                }\n              };\n\n              for (var piece in opponentPieces) {\n                _loop(piece);\n              }\n\n              crownPiece(selectedPiece);\n              validMoveXY.length = 0;\n              validJumpXY.length = 0;\n              selectedPiece = {};\n              selectedPieceXY.length = 0;\n              setSelectedPiece({});\n              setHasJumped(true);\n              justCrowned = getJustCrowned();\n\n              if (justCrowned === true) {\n                console.log(\"Changing turn - justCrowned TRUE\");\n                changeTurn();\n              } else {\n                jumpAgain(checkForMoreJumps);\n              }\n\n              postMove(gameId, oldAndNewPositions, justCrowned);\n            })();\n          }\n        });\n      } //no jump available\n      else if (allowedJumps.length === 0 && getAvailableJumps() === false) {\n          allowedMoves.forEach(function (tile) {\n            if (gameBoardTiles[tile]['x'] === newPosition[0] && gameBoardTiles[tile]['y'] === newPosition[1]) {\n              newTile = gameBoardTiles[tile];\n              newTile.occupied = color;\n              updateGameBoardTile(tile, color);\n              var oldAndNewPositions = [pieceName, oldTile.pos, newTile.pos, newTile.x, newTile.y];\n              selectedPiece.pos = newTile.pos;\n              selectedPiece.x = newTile.x;\n              selectedPiece.y = newTile.y;\n              crownPiece(selectedPiece);\n              oldTile.occupied = 'empty';\n              updateGameBoardTile(\"tile\".concat(oldTile.pos), 'empty');\n              validMoveXY.length = 0;\n              validJumpXY.length = 0;\n              selectedPieceXY.length = 0;\n              postMove(gameId, oldAndNewPositions);\n              changeTurn();\n            }\n          });\n        }\n    },\n    // pass xy coords to pieces\n    transform: function transform(piece, player) {\n      var x = piece.x + 30;\n      var y = piece.y + 30;\n      return \"translate(\".concat(x, \",\").concat(y, \")\");\n    },\n    updateGameBoardTile: function updateGameBoardTile(tile, occupied) {\n      this.gameBoardTiles[tile]['occupied'] = occupied;\n    },\n    //implemented after dropPiece()\n    // TODO: if multijump available- do not change turn\n    changeTurn: function changeTurn() {\n      this.setHasJumped(false);\n      this.setAvailableJumps(false);\n\n      if (this.turn === 'red') {\n        this.turn = 'blue';\n      } else if (this.turn === 'blue') {\n        this.turn = 'red';\n      }\n    },\n    jumpAgain: function jumpAgain(moreJumps) {\n      this.selectPiece(moreJumps[0], moreJumps[1], moreJumps[2]);\n      this.getAllowedJumps();\n\n      if (this.allowedJumps.length > 0) {\n        return;\n      } else {\n        this.changeTurn();\n      }\n    },\n    //if crowned - player can move forwards and backwards\n    crownPiece: function crownPiece(piece) {\n      var justCrowned = false;\n      console.log(\"Piece Crown : \" + piece['crown']);\n      console.log(\"Piece Pos : \" + piece['pos']);\n      console.log(\"PIECE\" + JSON.stringify(piece));\n\n      if (piece['crown'] === false && this.turn === 'red') {\n        if (piece['pos'] === 29 || piece['pos'] === 30 || piece['pos'] === 31 || piece['pos'] === 32) {\n          piece['crown'] = true;\n          justCrowned = true;\n          console.log(\"Piece Crown : \" + piece['crown']);\n        }\n      } else if (piece['crown'] === false && this.turn === 'blue') {\n        if (piece['pos'] === 1 || piece['pos'] === 2 || piece['pos'] === 3 || piece['pos'] === 4) {\n          piece['crown'] = true;\n          justCrowned = true;\n          console.log(\"Piece Crown : \" + piece['crown']);\n        }\n      }\n\n      if (justCrowned === true) {\n        this.setJustCrowned(justCrowned);\n      }\n    },\n    //send move information to server\n    postMove: function postMove(gameId, oldAndNew, crowned) {\n      var url = window.location.href;\n      gameId = url.split('game/').pop();\n      var pieceName = oldAndNew[0];\n      var oldpos = oldAndNew[1];\n      var newpos = oldAndNew[2];\n      var newX = oldAndNew[3];\n      var newY = oldAndNew[4];\n      var tiles = this.gameBoardTiles;\n      var turn = this.turn;\n      var captured = \"\";\n      var player1 = this.player1;\n      var player2 = this.player2;\n\n      if (player1.color === 'red' && pieceName[0] === 'r') {\n        player1['pieces'][pieceName]['pos'] = oldAndNew[2];\n        player1['pieces'][pieceName]['x'] = oldAndNew[3];\n        player1['pieces'][pieceName]['y'] = oldAndNew[4];\n\n        if (crowned) {\n          player1['pieces'][pieceName]['crown'] = crowned;\n        }\n      } else if (player1.color === 'blue' && pieceName[0] === 'b') {\n        player1['pieces'][pieceName]['pos'] = oldAndNew[2];\n        player1['pieces'][pieceName]['x'] = oldAndNew[3];\n        player1['pieces'][pieceName]['y'] = oldAndNew[4];\n\n        if (crowned) {\n          player1['pieces'][pieceName]['crown'] = crowned;\n        }\n      } else if (player2.color === 'red' && pieceName[0] === 'r') {\n        player2['pieces'][pieceName]['pos'] = oldAndNew[2];\n        player2['pieces'][pieceName]['x'] = oldAndNew[3];\n        player2['pieces'][pieceName]['y'] = oldAndNew[4];\n\n        if (crowned) {\n          player2['pieces'][pieceName]['crown'] = crowned;\n        }\n      } else if (player2.color === 'blue' && pieceName[0] === 'b') {\n        player2['pieces'][pieceName]['pos'] = oldAndNew[2];\n        player2['pieces'][pieceName]['x'] = oldAndNew[3];\n        player2['pieces'][pieceName]['y'] = oldAndNew[4];\n\n        if (crowned) {\n          player2['pieces'][pieceName]['crown'] = crowned;\n        }\n      }\n\n      if (oldAndNew[5]) {\n        captured = oldAndNew[5];\n      }\n\n      var postGame = {\n        pieceName: pieceName,\n        oldpos: oldpos,\n        newpos: newpos,\n        newX: newX,\n        newY: newY,\n        tiles: tiles,\n        turn: turn,\n        captured: captured\n      };\n      this.$http.post(\"\".concat(baseUrl, \"newgame/moves\"), {\n        gameId: gameId,\n        postGame: postGame\n      }).then(function (response) {}, function (error) {\n        console.log(error);\n      }).then(function () {\n        //After posting to server/db, Send current board state to socket 'board'\n        socket.emit('gamedata', 'open');\n        var gameData = {};\n        var gameMessage = \"\";\n\n        if (captured) {\n          if (pieceName[0] === 'r' && player1.color === 'red' && this.user.name === player1.name || pieceName[0] === 'b' && player1.color === 'blue' && this.user.name === player1.name) {\n            gameMessage = \"\".concat(player1.name, \" captured \").concat(player2.name, \"'s piece!\");\n          } else if (pieceName[0] === 'r' && player2.color === 'red' && this.user.name === player2.name || pieceName[0] === 'b' && player2.color === 'blue' && this.user.name === player2.name) {\n            gameMessage = \"\".concat(player2.name, \" captured \").concat(player1.name, \"'s piece!\");\n          }\n        }\n\n        gameData.player1 = player1;\n        gameData.player2 = player2;\n        gameData.tiles = this.gameBoardTiles;\n        gameData.turn = this.turn;\n        gameData.gameMessage = gameMessage;\n        socket.emit('gamedata', gameData);\n      });\n    },\n    //getters and setters. I've had namespace/this trouble updating certain variables directly.\n    //getters and setters seem to help\n    getGameBoardTiles: function getGameBoardTiles() {\n      return this.gameBoardTiles;\n    },\n    setCanBeJumped: function setCanBeJumped(jumpsPossible) {\n      this.canBeJumped = jumpsPossible;\n    },\n    getJustCrowned: function getJustCrowned() {\n      return this.justCrowned;\n    },\n    setJustCrowned: function setJustCrowned(crownStatus) {\n      this.justCrowned = crownStatus;\n    },\n    getSelectedTile: function getSelectedTile() {\n      return this.selectedTile;\n    },\n    setSelectedTile: function setSelectedTile(tile) {\n      this.selectedTile = tile;\n    },\n    getSelectedPiece: function getSelectedPiece() {\n      return this.selectedPiece;\n    },\n    setSelectedPiece: function setSelectedPiece(piece) {\n      this.selectedPiece = piece;\n    },\n    getPieceName: function getPieceName() {\n      return this.pieceName;\n    },\n    setPieceName: function setPieceName(pieceName) {\n      this.pieceName = pieceName;\n    },\n    getAllowedMoves: function getAllowedMoves() {\n      return this.allowedMoves;\n    },\n    getAllowedJumps: function getAllowedJumps() {\n      return this.allowedJumps;\n    },\n    setAllowedJumps: function setAllowedJumps(jumps) {\n      this.allowedJumps = jumps;\n    },\n    setSelectedPieceXY: function setSelectedPieceXY(pieceXY) {\n      this.selectedPieceXY = pieceXY;\n    },\n    getValidMoveXY: function getValidMoveXY() {\n      return this.validMoveXY;\n    },\n    setValidMoveXY: function setValidMoveXY(moveXY) {\n      this.validMoveXY = moveXY;\n    },\n    setValidJumpXY: function setValidJumpXY(jumpXY) {\n      this.validJumpXY = jumpXY;\n    },\n    getHasJumped: function getHasJumped() {\n      return this.hasjumped;\n    },\n    setHasJumped: function setHasJumped(tf) {\n      this.hasJumped = tf;\n    },\n    getAvailableJumps: function getAvailableJumps() {\n      return this.availableJumps;\n    },\n    setAvailableJumps: function setAvailableJumps(tf) {\n      this.availableJumps = tf;\n    },\n    getPlayer1: function getPlayer1() {\n      return this.player1;\n    },\n    getPlayer2: function getPlayer2() {\n      return this.player2;\n    },\n    getComputerMoves: function getComputerMoves() {\n      return this.computerMoves;\n    },\n    setComputerMoves: function setComputerMoves(move) {\n      this.computerMoves.push(move);\n    },\n    getComputerJumps: function getComputerJumps() {\n      return this.computerJumps;\n    },\n    setComputerJumps: function setComputerJumps(jump) {\n      this.computerJumps.push(jump);\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./src/components/game-container/game/GameBoard.vue?vue&type=script&lang=js&\n");

/***/ })

})